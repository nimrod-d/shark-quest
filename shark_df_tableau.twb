<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='shark_df_us' inline='true' name='federated.191pf6j06f6zuc1cu9flp1rliy7t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='shark_df_us' name='textscan.1ofeo481o2yia015gfrsa0hysted'>
            <connection class='textscan' directory='C:/Users/Nimrod/Documents/GitHub/2nd_try_iron_repo/Quests' filename='shark_df_us.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ofeo481o2yia015gfrsa0hysted' name='shark_df_us.csv' table='[shark_df_us#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='dd-MMM-yyyy|#|#|ddHH-MMM-yyyy|#|#|&apos;Before&apos; MMdd-&apos;Jun&apos;-yyyy' name='date' ordinal='0' />
            <column datatype='real' name='year' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
            <column datatype='string' name='country' ordinal='3' />
            <column datatype='string' name='state' ordinal='4' />
            <column datatype='string' name='location' ordinal='5' />
            <column datatype='string' name='activity' ordinal='6' />
            <column datatype='string' name='name' ordinal='7' />
            <column datatype='string' name='sex' ordinal='8' />
            <column datatype='integer' name='age' ordinal='9' />
            <column datatype='string' name='injury' ordinal='10' />
            <column datatype='string' name='time' ordinal='11' />
            <column datatype='string' name='species ' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ofeo481o2yia015gfrsa0hysted' name='shark_df_us.csv' table='[shark_df_us#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='dd-MMM-yyyy|#|#|ddHH-MMM-yyyy|#|#|&apos;Before&apos; MMdd-&apos;Jun&apos;-yyyy' name='date' ordinal='0' />
            <column datatype='real' name='year' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
            <column datatype='string' name='country' ordinal='3' />
            <column datatype='string' name='state' ordinal='4' />
            <column datatype='string' name='location' ordinal='5' />
            <column datatype='string' name='activity' ordinal='6' />
            <column datatype='string' name='name' ordinal='7' />
            <column datatype='string' name='sex' ordinal='8' />
            <column datatype='integer' name='age' ordinal='9' />
            <column datatype='string' name='injury' ordinal='10' />
            <column datatype='string' name='time' ordinal='11' />
            <column datatype='string' name='species ' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>sex</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>injury</remote-name>
            <remote-type>129</remote-type>
            <local-name>[injury]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>injury</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>species </remote-name>
            <remote-type>129</remote-type>
            <local-name>[species ]</local-name>
            <parent-name>[shark_df_us.csv]</parent-name>
            <remote-alias>species </remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='shark_df_us.csv' datatype='table' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Injury' datatype='string' name='[injury]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='Species' datatype='string' name='[species ]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Time' datatype='string' name='[time]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Year' datatype='real' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[injury]' derivation='None' name='[none:injury:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Injury,Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:injury:nk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;california&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;north carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;new mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cayman islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pennsylvania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;kentucky&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;texas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;puerto rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;missouri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;new york&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;massachusetts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rhode island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;louisiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wake island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;maine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;washington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;mississippi&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;south carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;new jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;us virgin islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;maryland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;virgin islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;oregon&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Questionable&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Provoked&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Unprovoked&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unconfirmed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Watercraft&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Invalid&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sea Disaster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boat&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Under investigation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Israel&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='shark_df_us.csv' id='shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504'>
            <properties context=''>
              <relation connection='textscan.1ofeo481o2yia015gfrsa0hysted' name='shark_df_us.csv' table='[shark_df_us#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' date-parse-format='dd-MMM-yyyy|#|#|ddHH-MMM-yyyy|#|#|&apos;Before&apos; MMdd-&apos;Jun&apos;-yyyy' name='date' ordinal='0' />
                  <column datatype='real' name='year' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='country' ordinal='3' />
                  <column datatype='string' name='state' ordinal='4' />
                  <column datatype='string' name='location' ordinal='5' />
                  <column datatype='string' name='activity' ordinal='6' />
                  <column datatype='string' name='name' ordinal='7' />
                  <column datatype='string' name='sex' ordinal='8' />
                  <column datatype='integer' name='age' ordinal='9' />
                  <column datatype='string' name='injury' ordinal='10' />
                  <column datatype='string' name='time' ordinal='11' />
                  <column datatype='string' name='species ' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Fatal_state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sum of Fatal encounter by state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='shark_df_us' name='federated.191pf6j06f6zuc1cu9flp1rliy7t' />
          </datasources>
          <datasource-dependencies datasource='federated.191pf6j06f6zuc1cu9flp1rliy7t'>
            <_.fcp.ObjectModelTableType.false...column caption='shark_df_us.csv' datatype='integer' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='shark_df_us.csv' datatype='table' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[injury]' derivation='Attribute' name='[attr:injury:nk]' pivot='key' type='nominal' />
            <column-instance column='[age]' derivation='Count' name='[cnt:age:qk]' pivot='key' type='quantitative' />
            <column caption='Injury' datatype='string' name='[injury]' role='dimension' type='nominal' />
            <column-instance column='[injury]' derivation='None' name='[none:injury:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Inclusions (Injury,Type)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:injury:nk]' member='&quot;FATAL&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;Unprovoked&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;maryland&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;mississippi&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;virginia&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' direction='DESC' using='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[cnt:age:qk]' />
          <slices>
            <column>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Inclusions (Injury,Type)]</column>
            <column>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[:Measure Names]</column>
            <column>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[cnt:age:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' value='204' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[attr:injury:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]</rows>
        <cols>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[cnt:age:qk]</cols>
      </table>
      <simple-id uuid='{84159182-4BCA-4DDB-9225-B4E133E96FB3}' />
    </worksheet>
    <worksheet name='Monthly_by_state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Shark Atk per Month Number filter by state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='shark_df_us' name='federated.191pf6j06f6zuc1cu9flp1rliy7t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.191pf6j06f6zuc1cu9flp1rliy7t'>
            <_.fcp.ObjectModelTableType.false...column caption='shark_df_us.csv' datatype='integer' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='shark_df_us.csv' datatype='table' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[mn:date:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;south carolina&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]</column>
            <column>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[mn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[mn:date:qk]' scope='cols' value='Month Number' />
            <format attr='title' class='0' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' scope='rows' value='Count of Shark Atk' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]</rows>
        <cols>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[mn:date:qk]</cols>
      </table>
      <simple-id uuid='{B92A8153-5A7C-4470-87C4-B37AE4ECD65E}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shark Attacks by Geolocation with count of cases per state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='shark_df_us' name='federated.191pf6j06f6zuc1cu9flp1rliy7t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.191pf6j06f6zuc1cu9flp1rliy7t'>
            <_.fcp.ObjectModelTableType.false...column caption='shark_df_us.csv' datatype='integer' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='shark_df_us.csv' datatype='table' name='[__tableau_internal_object_id__].[shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Longitude (generated)]' field-type='quantitative' max='34478243.622920729' min='21350156.688081898' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Latitude (generated)]' field-type='quantitative' max='8033108.8214095449' min='941697.39935790084' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' />
              <size column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' />
              <text column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' />
              <lod column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:country:nk]' />
              <lod column='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3756906986236572' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Latitude (generated)]</rows>
        <cols>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CC43BA3A-706B-4C60-ACFE-DDC9BD94FFB0}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='4' param='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[mn:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFF8DDB5-E695-4D61-93BC-39A2967AE770}' />
    </window>
    <window class='worksheet' name='Monthly_by_state'>
      <cards>
        <edge name='left'>
          <strip size='147'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card param='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:species :nk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9093F533-4527-4B3F-BFDB-97E745579836}' />
    </window>
    <window class='worksheet' maximized='true' name='Fatal_state'>
      <cards>
        <edge name='left'>
          <strip size='143'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[__tableau_internal_object_id__].[cnt:shark_df_us.csv_E9CCCC23E71B425887F3A5241AD75504:qk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[attr:injury:nk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:injury:nk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:state:nk]</field>
            <field>[federated.191pf6j06f6zuc1cu9flp1rliy7t].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CAFFE6FF-4ACA-4D80-9D98-E552E5A5AA15}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fatal_state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly_by_state' width='192'>
      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
      pV08MxC1p4oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
